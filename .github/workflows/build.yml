---
name: Docker Image CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  schedule:
    - cron: "10 1 * * 0" # https://crontab.guru/#10_1_*_*_1
env:
  REGISTRY: ghcr.io
  ORIGINAL_IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Set the variables
        env:
          DEFAULT_VERSION: 'latest'
        run: |
          echo "VERSION=${{ github.event.inputs.version || env.DEFAULT_VERSION }}" >> $GITHUB_ENV
          echo "IMAGE_NAME=${ORIGINAL_IMAGE_NAME,,}" >> $GITHUB_ENV
      - uses: actions/checkout@v4
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build the Docker image
        run: docker build -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:$VERSION .
      - name: Run the built image.
        run: >-
          docker run --name test-container -d --privileged
          -v /sys/fs/cgroup:/sys/fs/cgroup:rw --cgroupns=host
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:$VERSION
      - name: Verify Ansible is accessible in the built image.
        run: docker exec --tty test-container env TERM=xterm ansible --version
      - name: Push the Docker image
        run: docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:$VERSION
        if: github.event_name != 'pull_request'
